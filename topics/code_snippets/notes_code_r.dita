<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="reference_s2r_fbb_gvb">
    <title>Note Code Snippets</title>
    <shortdesc>View the python code that is generated when you create the notes for the content
        definition.</shortdesc>
    <refbody>
        <section id="section_ncf_kbb_gvb">
            <title>Create</title>
            <p>The python code generated when creating a <parmname>Create</parmname> note is as
                follows:<codeblock id="codeblock_odj_mbb_gvb"># --------------------------------------------------------------------------------
# stubs for action NoteCreate generated by Altair One content definition compiler.
# NoteCreatePre  [optional] precheck and setup resources required for action.
# NoteCreateRun  business logic of action and set outputs.
# NoteCreatePost [optional] postchecks and free resources aquired by action.
# *** DO NOT MODIFY STUB DEFINITIONS ***.
# --------------------------------------------------------------------------------

#Created from PythonActionSrcTemplate

from altair.system import ActionContext
from altair.todo import NoteCreateInputs
from altair.todo import NoteCreateOutputs
from altair.todo import Note
from altair.system import Content


async def NoteCreateRun(inputs: NoteCreateInputs, outputs: NoteCreateOutputs, context: ActionContext):
    '''Implement business logic of action and set outputs

    Args:
        inputs (NoteCreateInputs): action inputs
        outputs (NoteCreateOutputs): action outputs
        context (ActionContext): action context
    '''
    # Create the instance of the note
    note = Note(session=context.session)
    note.name = inputs.name
    note.content = inputs.content

    # Add note the parent ToDo
    parentRef = await Content.getByRef(session=context.session, contentRef=inputs.parentRef)
    parentRef.content.addRelation(to=note, relationType="notes")

    # Assign the note object to the output content
    outputs.content = note</codeblock></p>
        </section>
        <section id="section_lpn_kbb_gvb">
            <title>Delete</title>
            <p>The python code generated when creating a <parmname>Delete</parmname> action is as
                follows:<codeblock id="codeblock_x1h_nbb_gvb"># --------------------------------------------------------------------------------
# stubs for action NoteDelete generated by Altair One content definition compiler.
# NoteDeletePre  [optional] precheck and setup resources required for action.
# NoteDeleteRun  business logic of action and set outputs.
# NoteDeletePost [optional] postchecks and free resources aquired by action.
# *** DO NOT MODIFY STUB DEFINITIONS ***.
# --------------------------------------------------------------------------------

#Created from PythonActionSrcTemplate

from altair.system import ActionContext
from altair.todo import NoteDeleteInputs
from altair.todo import NoteDeleteOutputs


async def NoteDeleteRun(inputs: NoteDeleteInputs, outputs: NoteDeleteOutputs, context: ActionContext):
    '''Implement business logic of action and set outputs

    Args:
        inputs (NoteDeleteInputs): action inputs
        outputs (NoteDeleteOutputs): action outputs
        context (ActionContext): action context
    '''
    await inputs.thisContent.delete()
    outputs.success = True</codeblock></p>
        </section>
    </refbody>
</reference>
